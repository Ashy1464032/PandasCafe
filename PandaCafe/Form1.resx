<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>